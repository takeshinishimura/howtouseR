---
project:
  type: website
  output-dir: docs
title: "まずは使ってみる"
date: "`r format(Sys.time(), '%Y-%m-%d')`"
format:
  html:
    toc: true
    toc-title: 目次
    toc_float: true
    toc-depth: 4
    number-sections: true
    theme: simplex
lang: ja
---

## tibble

[tibble](https://tibble.tidyverse.org/){target="_blank"}

### tidyr

[tidyr](https://tidyr.tidyverse.org/){target="_blank"}

ワイドはMicrosoft Excelでよく見る，複数の列がある表のようなデータ形式のことです。
一方，ロングというデータ形式もあり，列数は限られています。
ワイドは横に長く，ロングは縦に長いデータフレームです。

#### pivot_longer()

```{r}
head(iris)
dim(iris)
iris_long <- tidyr::pivot_longer(iris, cols = Sepal.Length:Petal.Width)
iris_long
dim(iris_long)
```


#### pivot_wider()

```{r}
iris_wide <- tidyr::pivot_wider(iris_long, names_from = name)
iris_wide
dim(iris_wide)
```

`tidyr::spread()` と `tidyr::gather()` は superseded になっている（古い関数）ので，覚える必要はない。

#### separate()

`tidyr::separate()` は列を複数列に分割します。
ただし，superseded になっているため，次のようなコマンドで代替します。
```{r}
iris |>
  dplyr::mutate(tmp = formatC(Sepal.Length, format = "f", digits = 1)) |>
  tidyr::separate_wider_delim(tmp, delim = ".", names = c("A", "B"))
# tidyr::separate_longer_delim(tmp, delim = ".")
```

#### unnest()

`tidyr::unnest()` はリストの中を `unlist()` して，行と列の要素とします。
他の列は，重複分だけ複製されます。
```{r}
#| eval: false
tidyr::unnest()
```


### dplyr

[dplyr](https://dplyr.tidyverse.org/){target="_blank"}

#### select()

`select()` で列を選択する。
```{r}
head(iris["Species"])
head(iris |> dplyr::select(Species))
```

#### mutate()

`mutate()` で新しい列を作成する。
```{r}
iris2 <- iris
iris2$new_species <- iris2$Species
head(iris2)
iris3 <- iris
head(iris3 |> dplyr::mutate(new_species = Species))
```

`mutate()` で列を修正する。
```{r}
head(iris$Sepal.Length <- iris$Sepal.Length * 100)
head(iris |> dplyr::mutate(Sepal.Length = iris$Sepal.Length * 100))
```

`mutate()` で列を修正する。
```{r}
str(iris)
iris2 <- iris
for (i in names(iris2)[names(iris2) != "Species"]) {
  iris2[[i]] <- as.factor(iris2[[i]])
}
str(iris2)
iris3 <- iris |>
  dplyr::mutate(dplyr::across(!Species, as.factor))
str(iris3)
```

#### filter()

`filter()` で列を抽出する。
```{r}
iris[iris$Sepal.Length > mean(iris$Sepal.Length), ]
iris |> dplyr::filter(Sepal.Length > mean(iris$Sepal.Length))
iris[iris$Species == "setosa", ]
iris |> dplyr::filter(Species == "setosa")
iris[grep("^v", iris$Species), ]
iris |> dplyr::filter(stringr::str_detect(Species, "^v"))
head(iris |> dplyr::filter(!stringr::str_detect(Species, "^v")))
```

#### arrange()


#### count()

```{r}
data.frame(table(iris$Species))
iris |> dplyr::count(Species)
```

#### arrange()

```{r}
iris[order(iris$Sepal.Length, decreasing = TRUE), ]
iris |>
  dplyr::arrange(dplyr::desc(Sepal.Length))
```

#### summarise()

```{r}
sapply(split(iris$Sepal.Length, iris$Species), mean)
iris |>
  dplyr::group_by(Species) |>
  dplyr::summarize(value = mean(Sepal.Length))
```

#### group_by

```{r}
sapply(split(iris, iris$Species), nrow)
iris |>
  dplyr::group_by(Species) |>
  dplyr::count()
```


### readr

[readr](https://readr.tidyverse.org/)

