---
project:
  type: website
  output-dir: docs
title: "基礎"
date: "`r format(Sys.time(), '%Y-%m-%d')`"
format:
  html:
    toc: true
    toc-title: 目次
    toc_float: true
    toc-depth: 3
    number-sections: true
    theme: simplex
lang: ja
---


## ファイル

Rのコードは
ファイルに書いてください。

一連のコードのことをスクリプトと呼びます。

ファイル操作

### 作業ディレクトリの変更

Rを起動しているとき，パソコンのどこにいるのかを確認する必要が生じることがあります。
とくに，ファイルの読み書きをするなど，ファイル操作時に相対的な位置を指定しなければならないことがあります。
例えば，Rで作成した図をPDFファイルとして保存したい場合，パスを指定しなければ，カレントディレクトリに保存される。
このとき，カレントディレクトリがどこなのか理解していなければ，Explorer（Windowsの場合）やFinder（macOSの場合）からファイルを探すのに時間がかかってしまう。
最悪の場合，保存したファイルを見つけることができない。

「どこ」というのは，自分のパソコンのディレクトリ（フォルダとも呼ぶ）構成の「どこ」にいるのかという意味であり，Windowsなら `C:` から始まり，macOSなら `/` から始まる階層構造における位置のことである。
何も設定をしていなければ，Rの起動直後は，ホームディレクトリにいるはずである。
次のコマンドで，自分がどこにいるか（カレントディレクトリの場所）を確認できる。

```{r}
#| eval: false
getwd()
```

作業ディレクトリ（working directory）だからwdであり，それを得るという意味でgetを付けている。
通常，コマンドの意味は知る必要ないが，覚えるためには意味とコマンドの綴りを対応させなければならず，必然的に覚えざるを得ない。
作業ディレクトリを設定するには次のようにする。

```{r}
#| eval: false
setwd("~")
```

"~" はホームディレクトリを意味する。
"~" を自分が作業したいところに変更すればよい。
よくわからないと思うので，最初は先ほどダウンロードしたExcelファイルをホームディレクトリに移動して，そこで作業するのも悪くない。
Excelファイルの移動は，Windowsならエクスプローラーを使い，macOSならファインダーを使えばよい。
この場合，作業ディレクトリは変更する必要がない。


## 変数の型

変数の型には，数値型，因子型，文字列型がある。

```{r}
#| eval: false
typeof()
mode()
class()

table()
unique()

levels()
factor()にのみ使える


data.frame()
list()

head()
tail()

条件分岐
for
```

### 比較演算子

==
>
>=
<
=<

!=

is.na()
is.null()

### 正規表現

正規表現を知っているかどうかで，比較演算子の効率的な使い方が飛躍的に向上します。
正規表現は，人間が考えるかのようにコンピュータに考えさせる記述方法です。
しかし，非常にややこしいのでここでは説明しません。
以下のWebページを確認してください。

- [R における正規表現 - RjpWiki](http://www.okadajp.org/RWiki/?R+%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE)


### 型変換

数値型は

```{r}
#| eval: false
install.packages("scales")
```

### 型が変わる

変数の型は意識して変えなくても変わることがある。
どのような場合に変わるかの感覚を身につけなければならない。

`TRUE` を `sum()` することができる。
```{r}
#| eval: false
sum( == )
```
このとき，`sum()` は `TRUE` の数に一致する。
`TRUE` の数を数えていると理解してもよい。
実際には，R内部で `TRUE` は数値の `1` に変換され，`FALSE` は数値の `0` に変換された後，`sum()` が適用されている。




## 練習問題

1. 気象庁の次のWebサイトからCSVファイルをダウンロードして，変数 `temp` に読み込んだ後，世界全体の最高気温と最低気温を計算しなさい。
  - [世界の年平均気温偏差（℃）](https://www.data.jma.go.jp/cpdinfo/temp/list/an_wld.html)
1. 
